# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: 'Pre merge checks'

on:
  pull_request:
    branches: [master]

jobs:
  dependencies:
    name: 'Build'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      uses: actions/cache@v2
      id: restore-dependencies
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

  lint:
    name: Build
    runs-on: ubuntu-latest
    needs: [dependencies]

    steps:
      - run: npm run lint

  no-datapass-staging:
    name: 'No link to datapass-staging'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - run: npm run check-no-datapass-staging

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [dependencies]

    steps:
      - run: npm i
      - run: npm run build
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

  tests:
    name: Run tests e2e
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - run: npm run test

