{"version":3,"sources":["<no source>","../../../sidemenu.css","../../../../../src/sidemenu/main.scss","../../../../../src/sidemenu/styles/_module.scss","../../../../../src/core/styles/reset/tools/_lists.scss","../../../../../src/core/styles/reset/tools/_link.scss","../../../../../src/core/styles/spacing/tools/_position.scss","../../../../../src/core/styles/global/misc/shadow/_tools.scss","../../../../../src/core/styles/global/misc/shadow/_settings.scss","../../../../../src/core/styles/spacing/tools/_space.scss","../../../../../src/sidemenu/styles/modules/_title.scss","../../../../../src/sidemenu/styles/modules/_variants.scss","../../../../../src/core/styles/global/tools/_blocks.scss","../../../../../src/core/styles/typography/tools/_styles.scss","../../../../../src/core/styles/typography/settings/_font-weight.scss","../../../../../src/sidemenu/styles/modules/_list.scss","../../../../../src/core/styles/global/tools/_pseudo.scss","../../../../../src/core/styles/spacing/tools/_size.scss","../../../../../src/sidemenu/styles/modules/_inner.scss","../../../../../src/sidemenu/styles/modules/_btn.scss","../../../../../src/core/styles/global/tools/_display.scss","../../../../../src/core/styles/icons/_tools.scss","../../../../../src/core/styles/global/functions/_units.scss","../../../../../src/sidemenu/styles/modules/_link.scss","../../../../../src/schemes/styles/tools/_element.scss","../../../../../src/core/styles/global/functions/_strings.scss","../../../../../src/sidemenu/styles/_schemes.scss","../../../../../src/schemes/styles/tools/_hover.scss","../../../../../src/core/styles/global/misc/breakpoints/_tools.scss"],"names":[],"mappings":"AAAA;;GAAA;ACAA,gBAAgB;;ACAhB;;yCDGyC;;AEEzC;ECaE,gBAAU;ECCV,gBAAU;ECbV,kBAAU;ECAV,gFCCyE;ECqDrE,kBAxBkB;EAyBlB,mBAzBkB;EC/BxB;;ETQE,CURF;;EVWE;AACF;;AEZA;EAQI,eAAe;AFQnB;;AWfE;EHwEE,SCrEe;EDqEf,eCpEmB;EGcrB,mBAA6C;EAG3C,oBAA6D;EHf/D,gBIJS;AbuCX;;AW7BE;EGZA,gBDES;Ab0DX;;AWhDG;EH4DC,uBA1CoB;EMzBpB,gBDJU;AbgEd;;AWrDG;;ECMD,eAA6C;EAG3C,mBAA6D;EEZ3D,gBDRQ;Ab6Ed;;AWlEG;;ECMD,mBAA6C;EAG3C,mBAA6D;AZ+DjE;;AWlEE;ENlBA,kBAAU;ALqGZ;;AejGU;EAOJ,aDesB;Ad+E5B;;AWvFG;EGWC,SAAS;AdgFb;;AezGU;;EAOJ,WDyBuB;ETpC3B,kBAAU;EAER,YAAK;EAML,eAAQ;EAGR,OAAM;EWTJ,UAAO;AhBoHb;;AWpGG;EG6BC,SAAS;AdiFb;;AiBjIA;EAKE;;;GjBkIC;AACH;;AiBxIC;ETyEG,cA1CoB;ARmHxB;;AkBlJA;;;ElB6NE;;AkBzNF;EbHE,kBAAU;EcKR,aAAa;EAIb,2BAAgB;EAIhB,mBAAa;EHXX,WAAO;EAGP,YAAQ;ERmEV,uBA1CoB;EA0CpB,cUhEoB;ENUtB,eAA6C;EAG3C,mBAA6D;EMX/D,gBAAgB;EAChB,gBLTS;EKUT,aAAa;EACb,SAAS;EAmBT;;;KlB+MG;AACL;;Ae5OU;EKyDF,6BAA6B;EAC7B,kBAAkB;EAClB,8BAA8B;EAC9B,oBAAoB;EACpB,oBAAoB;EACpB,cAAc;ApBuLtB;;AerPU;EK2EJ,eC1D4C;ED4B9C,YAAqB;EZanB,iBU9CuB;EV8CvB,eU7CqB;EACvB,0BAA0B;AlB+O9B;;AkB9PA;EAuBI,SAAS;AlBiPb;;AevQU;EGwBJ,0BAA0B;AlBmPhC;;AkB3OU;EFlCJ,WAAO;EEoCT,mBAAmB;EAKnB;;KlB2OC;AACL;;AenRU;EP0DJ,kBAhCkB;AR6PxB;;AevRU;EK2EJ,eC1D4C;ED4B9C,YAAqB;EZKnB,mBAxBkB;EAyBlB,oBAzBkB;ARoQxB;;AsBnSA;;EtBqTE;;AsBlTF;EHGI,aAAa;EAIb,mBAAgB;EHPd,wBAAO;ERsET,gBA1CoB;EA0CpB,kBclEmB;EVYrB,eAA6C;EAG3C,mBAA6D;EUb/D,gBAAgB;AtBsTlB;;AE/TA;EqBoDE,+BC8BsG;AxByPxG;;AW1UE;EYmDA,kBC8BsG;ED9BtG,gCC8BsG;ED9BtG,oCC8BsG;AxBqQxG;;AWpUE;EYiCA,oCC8BsG;AxByQxG;;AWxUG;EYiCD,uCC8BsG;AxB6QxG;;AyBzUK;;EF8BH,mBC8BsG;AxBkRxG;;Ae/VU;;EUuBA,8BAA8B;AzB4UxC;;AkBpWA;EKgDE,kBC8BsG;AxBySxG;;AkBtVU;EKeR,+BC8BsG;AxB6SxG;;AsB5XA;ECiDE,kBC8BsG;ED9BtG,gCC8BsG;AxBsVxG;;AuB7YM;EGTF,uCAAc;EACd,yCAAe;A1BmanB;;AuB3ZM;;EGTF,uCAAc;EACd,yCAAe;A1ByanB;;AuBjaM;;EGTF,uCAAc;EACd,yCAAe;A1B+anB;;AuBrZM;EG3BF,uCAAc;EACd,yCAAe;A1BobnB;;A2B1bI;EzBbJ;IMuDM,cN3CiB;IM4CjB,eN5CiB;IMmDjB,mBAhCkB;INjBpB,gBAAgB;EFUlB;;EenBQ;IAOJ,abGwB;EFY5B;;EE3BF;IMuDM,iBNrCsB;IMsCtB,kBNtCsB;IMqCtB,iBNpCsB;IMqCtB,kBNrCsB;EFc1B;;EWhCA;ICkBA,kBAA6C;IAG3C,iBAA6D;EZ0B/D;;EW/CA;IHwEE,kBA1CoB;IA0CpB,UC9DkB;IAClB,SAAS;ET4CX;;EW3CC;IH4DC,cA1CoB;ERwCtB;;EW1DC;;IH4DC,uBA1CoB;ER4DtB;;EW9EA;IH4DE,SMnDe;Ed2EjB;;EW9EA;IGyBE,SAAS;EdgFX;;EiB5HF;ITyEI,yBA1CoB;ER8GtB;;EiB7ID;ITyEG,SS9DiB;EjB4InB;;EiBvJD;IAcK,iBAAiB;IACjB,gBAAgB;EjB+IpB;;EezJQ;IEaF,aAAa;EjB+InB;;EiBjKD;IAsBO,mBAAmB;EjB8IzB;;EEpKF;IQIE;;;IVwKE,CU1JF;;IV6JE,CUrJF;;IVwJE,CU3IF;;IV8IE;EACF;;EU9KA;IFuDI,kBAhCkB;IAgClB,gBErDsB;EVgL1B;;EUlLC;IFiEC,sBA1CoB;IEjBlB,eAAe;EVgLnB;;EUzKA;ILpBA,gBAAU;IAER,MAAK;IWGH,aAAQ;INiBV,cAAc;EV6KhB;;EUvKA;IL5BA,gBAAU;IAER,MAAK;IWGH,aAAQ;INyBV,cAAc;EV2KhB;;EU7KC;IAKG,cAAc;IM5Bd,aAAQ;EhBwMZ;;EUpKC;IFqBG,kBAhCkB;ERkLtB;;EkB5KQ;IAeJ,aAAa;ElBoPjB;;EkBpSF;IFDM,WAAO;IRsET,oCA1CoB;IU4BpB,SAAS;ElBqPX;;EsB7SF;INAM,WAAO;IRsET,oCA1CoB;IA0CpB,Sc3DiB;EtBwTnB;;EEtUF;IqBoDE,gCC8BsG;ExB8PtG;;EiBhVF;IMoDE,mCC8BsG;ExB2RtG;;EUrWC;Ia4CD,kCC8BsG;ExBiStG;;EUzUC;IaUD,6BC8BsG;ExBoStG;;EkBlXF;IKgDE,gCC8BsG;ExBkTtG;;EuBzWI;IGTF,uCAAc;IACd,yCAAe;E1BiYjB;;EuBzXI;;IGTF,uCAAc;IACd,yCAAe;E1BsYjB;;EuB9XI;;IGTF,uCAAc;IACd,yCAAe;E1B2YjB;;EuBjXI;IG3BF,uCAAc;IACd,yCAAe;E1B+YjB;AAhYF;;A2BrBI;EjB6BD;IF+BC,4BA1CoB;ERwLtB;;EelNQ;IP0DJ,qBAhCkB;ERwOtB;AA/CF;;A0B9LE;EAOI;IACE,+EAA+E;E1BwWrF;;E0BrWI;;IACE,iFAAiF;E1BuWvF;AACF;;A0BpXE;EAOI;;IACE,+EAA+E;E1B2YrF;;E0BxYI;;IACE,iFAAiF;E1B0YvF;AACF","file":"sidemenu.css","sourcesContent":[null,"@charset \"UTF-8\";\n/* ------------------------------------ *\\\n  SIDEMENU\n\\* ------------------------------------ */\n.fr-sidemenu {\n  --is-list: false;\n  --is-link: false;\n  position: relative;\n  box-shadow: 0 8px 8px 0 rgba(0, 0, 0, 0.1), 0 8px 16px -16px rgba(0, 0, 0, 0.32);\n  margin-left: -1rem;\n  margin-right: -1rem;\n  /**\n* Titre facultatif\n */\n  /**\n * Variantes du sidemenu proposées juste à partir du breakpoint md\n */\n}\n\n.fr-sidemenu a:not([href]) {\n  cursor: default;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    margin-left: 0;\n    margin-right: 0;\n    padding-right: 2rem;\n    box-shadow: none;\n  }\n  .fr-sidemenu::before {\n    content: none;\n  }\n  .fr-sidemenu .fr-collapse {\n    margin-left: -4px;\n    margin-right: -4px;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n}\n\n.fr-sidemenu__title {\n  margin: 0;\n  padding: 1rem 0;\n  font-size:  1.125rem ;\n  line-height:  1.75rem ;\n  font-weight: 700;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__title {\n    font-size:  1.25rem ;\n    line-height:  2rem ;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__title {\n    margin: 0 0 1.5rem;\n    padding: 0;\n    border: 0;\n  }\n}\n\n.fr-sidemenu__list {\n  font-weight: 700;\n}\n\n.fr-sidemenu__list .fr-sidemenu__list {\n  margin: 0 0.5rem 1.5rem;\n  font-weight: 400;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__list .fr-sidemenu__list {\n    margin: 0 1rem;\n  }\n}\n\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__link,\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__btn {\n  font-size:  1rem ;\n  line-height:  1.5rem ;\n  font-weight: 400;\n}\n\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__link,\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__btn {\n  font-size:  0.875rem ;\n  line-height:  1.5rem ;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__link,\n  .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__btn {\n    padding: 0.75rem 0.5rem;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__list {\n    margin: 0;\n  }\n}\n\n.fr-sidemenu__item {\n  position: relative;\n}\n\n.fr-sidemenu__item::before {\n  content: none;\n}\n\n.fr-sidemenu__item:last-child {\n  border: 0;\n}\n\n.fr-sidemenu__item--active > .fr-sidemenu__link::after, .fr-sidemenu__item--active > .fr-sidemenu__btn::after {\n  content: \"\";\n  position: absolute;\n  top: 0.75rem;\n  bottom: 0.75rem;\n  left: 0;\n  width: 2px;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__item {\n    border: 0;\n  }\n}\n\n.fr-sidemenu__item .fr-sidemenu__item .fr-sidemenu__item {\n  border: 0;\n}\n\n.fr-sidemenu__inner {\n  /**\n  * Ce wrapper ne sert que pour la version mobile\n  * On l'utilise pour l'ouverture/fermeture du sidemenu entier\n  */\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner {\n    padding: 0 2rem 0 0.25rem;\n  }\n}\n\n.fr-sidemenu__inner > .fr-collapse {\n  margin: 0 1rem;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner > .fr-collapse {\n    margin: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner > .fr-collapse {\n    overflow: initial;\n    max-height: none;\n  }\n  .fr-sidemenu__inner > .fr-collapse::before {\n    display: none;\n  }\n  .fr-sidemenu__inner > .fr-collapse:not(.fr-collapse--expanded) {\n    visibility: visible;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    /**\n   * Modificateur pour que le sidemenu s'adapte à un affichage à droite du contenu\n   * La bordure se met sur la gauche\n   */\n    /**\n   * Modificateur pour que le sidemenu soit sticky\n   */\n    /**\n   * Modificateur pour que le sidemenu soit à la fois sticky et prenne toute la hauteur de la page\n   */\n    /**\n   * Modificateur pour avoir une bordure tout autour du sidemenu\n   */\n  }\n  .fr-sidemenu--right {\n    padding-left: 2rem;\n    padding-right: 0;\n  }\n  .fr-sidemenu--right .fr-sidemenu__inner {\n    padding: 0 1rem 0 2rem;\n    border-right: 0;\n  }\n  .fr-sidemenu--sticky {\n    position: sticky;\n    top: 0;\n    height: 100vh;\n    overflow: auto;\n  }\n  .fr-sidemenu--sticky-full-height {\n    position: sticky;\n    top: 0;\n    height: 100vh;\n    overflow: auto;\n  }\n  .fr-sidemenu--sticky-full-height .fr-sidemenu__inner {\n    overflow: auto;\n    height: 100vh;\n  }\n  .fr-sidemenu--full-border .fr-sidemenu__title {\n    margin-top: 0.5rem;\n  }\n}\n\n@media (min-width: 48em) and (min-width: 48em) {\n  .fr-sidemenu--full-border .fr-sidemenu__inner {\n    padding: 0 0.25rem 0 0.25rem;\n  }\n}\n\n/**\n * Style du bouton du sidemnenu pour ouvrir/refermer les listes de niveaux 1 et 2\n * Bouton pour la version mobile pour ouvrir/refermer le sidemenu\n */\n.fr-sidemenu__btn {\n  position: relative;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 0.75rem 0.5rem;\n  margin: 0 auto;\n  font-size:  1rem ;\n  line-height:  1.5rem ;\n  text-align: left;\n  font-weight: 700;\n  background: 0;\n  border: 0;\n  /**\n    * Modificateur pour le bouton en version mobile permettant d'ouvrir/refermer le sidemenu\n    * L'icône de gauche est défini dans _sidemenu.scss (provisoire)\n    */\n}\n\n.fr-sidemenu__btn::before, .fr-sidemenu__inner > .fr-sidemenu__btn::after {\n  font-family: icons !important;\n  font-style: normal;\n  font-weight: normal !important;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n}\n\n.fr-sidemenu__btn::before {\n  font-size:  1rem;\n  content:  \"\";\n  margin-left: auto;\n  margin-right: 0;\n  transition: transform 0.3s;\n}\n\n@media (min-width: 48em) and (min-width: 48em) {\n  .fr-sidemenu__btn::before {\n    margin-right: -1.5rem;\n  }\n}\n\n.fr-sidemenu__btn[aria-expanded=\"true\" i] {\n  border: 0;\n}\n\n.fr-sidemenu__btn[aria-expanded=\"true\" i]::before {\n  transform: rotate(-180deg);\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn {\n  width: 100%;\n  font-weight: normal;\n  /**\n    * Ajout de l'icône de menu en mode mobile (provisoire)\n    */\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn::before {\n  margin-right: 1rem;\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn::after {\n  font-size:  1rem;\n  content:  \"\";\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner > .fr-sidemenu__btn {\n    display: none;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__btn {\n    width: 100%;\n    padding: 0.75rem 2rem 0.75rem 0.5rem;\n    border: 0;\n  }\n}\n\n/**\n * Style du lien d'accès direct du sidemnu\n */\n.fr-sidemenu__link {\n  display: flex;\n  flex-direction: row;\n  width: calc(100% - 1rem);\n  margin: 0 0.5rem;\n  padding: 0.75rem 0;\n  font-size:  1rem ;\n  line-height:  1.5rem ;\n  text-align: left;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__link {\n    width: 100%;\n    padding: 0.75rem 2rem 0.75rem 0.5rem;\n    margin: 0;\n  }\n}\n\n.fr-sidemenu {\n  background-color: var(--w-g750);\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    background-color: var(--t-plain);\n  }\n}\n\n.fr-sidemenu__title {\n  color: var(--g800);\n  background-color: var(--t-plain);\n  border-bottom: 1px solid var(--g300);\n}\n\n.fr-sidemenu__item {\n  border-bottom: 1px solid var(--g300);\n}\n\n.fr-sidemenu__item:last-child .fr-sidemenu__btn {\n  border-bottom: 1px solid var(--t-plain);\n}\n\n.fr-sidemenu__item--active > .fr-sidemenu__btn,\n.fr-sidemenu__item--active > .fr-sidemenu__link {\n  color: var(--bf500);\n}\n\n.fr-sidemenu__item--active > .fr-sidemenu__btn::after, .fr-sidemenu__item--active > .fr-sidemenu__link::after {\n  background-color: currentColor;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner {\n    border-right: 1px solid var(--g300);\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu--right .fr-sidemenu__inner {\n    border-left: 1px solid var(--g300);\n  }\n  .fr-sidemenu--full-border .fr-sidemenu__inner {\n    border: 1px solid var(--g300);\n  }\n}\n\n.fr-sidemenu__btn {\n  color: var(--g800);\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn {\n  background-color: var(--w-g750);\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__btn {\n    background-color: var(--t-plain);\n  }\n}\n\n@media (min-width: 48em) and (hover: hover) and (pointer: fine) {\n  .fr-sidemenu__btn:not(a):not(:disabled):hover, a.fr-sidemenu__btn[href]:hover {\n    background-image: linear-gradient(0deg, var(--color-hover), var(--color-hover));\n  }\n  .fr-sidemenu__btn:not(a):not(:disabled):active, a.fr-sidemenu__btn[href]:active {\n    background-image: linear-gradient(0deg, var(--color-active), var(--color-active));\n  }\n}\n\n@media (min-width: 48em) {\n  :root:not([data-fr-theme=\"dark\" i]) .fr-sidemenu__btn {\n    --color-hover: var(--block-color-hover);\n    --color-active: var(--block-color-active);\n  }\n  :root:not([data-fr-theme=\"dark\" i]) [class*=\"fr-scheme-light\"] .fr-sidemenu__btn,\n  :root:not([data-fr-theme=\"dark\" i]) [class*=\"--scheme-light-\"] .fr-sidemenu__btn {\n    --color-hover: var(--block-color-hover);\n    --color-active: var(--block-color-active);\n  }\n  :root:not([data-fr-theme=\"dark\" i]) [class*=\"fr-scheme-dark\"] .fr-sidemenu__btn,\n  :root:not([data-fr-theme=\"dark\" i]) [class*=\"--scheme-dark-\"] .fr-sidemenu__btn {\n    --color-hover: var(--block-color-hover);\n    --color-active: var(--block-color-active);\n  }\n  :root[data-fr-theme=\"dark\" i] .fr-sidemenu__btn {\n    --color-hover: var(--block-color-hover);\n    --color-active: var(--block-color-active);\n  }\n}\n\n.fr-sidemenu__link {\n  color: var(--g800);\n  background-color: var(--t-plain);\n}\n\n@media (hover: hover) and (pointer: fine) {\n  .fr-sidemenu__link:not(a):not(:disabled):hover, a.fr-sidemenu__link[href]:hover {\n    background-image: linear-gradient(0deg, var(--color-hover), var(--color-hover));\n  }\n  .fr-sidemenu__link:not(a):not(:disabled):active, a.fr-sidemenu__link[href]:active {\n    background-image: linear-gradient(0deg, var(--color-active), var(--color-active));\n  }\n}\n\n:root:not([data-fr-theme=\"dark\" i]) .fr-sidemenu__link {\n  --color-hover: var(--block-color-hover);\n  --color-active: var(--block-color-active);\n}\n\n:root:not([data-fr-theme=\"dark\" i]) [class*=\"fr-scheme-light\"] .fr-sidemenu__link,\n:root:not([data-fr-theme=\"dark\" i]) [class*=\"--scheme-light-\"] .fr-sidemenu__link {\n  --color-hover: var(--block-color-hover);\n  --color-active: var(--block-color-active);\n}\n\n:root:not([data-fr-theme=\"dark\" i]) [class*=\"fr-scheme-dark\"] .fr-sidemenu__link,\n:root:not([data-fr-theme=\"dark\" i]) [class*=\"--scheme-dark-\"] .fr-sidemenu__link {\n  --color-hover: var(--block-color-hover);\n  --color-active: var(--block-color-active);\n}\n\n:root[data-fr-theme=\"dark\" i] .fr-sidemenu__link {\n  --color-hover: var(--block-color-hover);\n  --color-active: var(--block-color-active);\n}\n","/* ------------------------------------ *\\\n  SIDEMENU\n\\* ------------------------------------ */\n\n@import './index';\n@import 'styles/module';\n@import 'styles/schemes';\n","////\n/// Sidemenu Module\n/// @group sidemenu\n////\n\n#{ns(sidemenu)} {\n  @include disable-list-style;\n  @include disable-link-style;\n  @include relative;\n  @include shadow(md);\n  @include margin-x(-4v);\n\n  a:not([href]) {\n    cursor: default;\n  }\n\n  @include respond-from(md) {\n    @include margin-x(0);\n    @include padding-right(8v);\n    box-shadow: none;\n    @include before(null, none);\n\n    #{ns(collapse)} {\n      @include margin-x(-4px);\n      @include padding-x(4px);\n    }\n  }\n\n  @import 'modules/title';\n  @import 'modules/list';\n  @import 'modules/inner';\n  @import 'modules/variants';\n}\n\n@import 'modules/btn';\n@import 'modules/link';\n","////\n/// Core Tools : Reset list\n/// @group core\n////\n\n%list-reset {\n  list-style-type: none;\n  margin-block-start: 0;\n  margin-block-end: 0;\n  padding-inline-start: 0;\n  padding-inline-end: 0;\n}\n\n@mixin enable-list-style() {\n  --is-list: ;\n}\n\n@mixin disable-list-style() {\n  --is-list: false;\n}\n\n@mixin remove-list-style($nested: false) {\n  @include padding-bottom(0);\n\n  & > li {\n    @include padding-bottom(0);\n    @include before(none, none) {\n      font-size: inherit;\n      font-weight: inherit;\n    }\n\n    @if $nested {\n      & > ol,\n      & > ul {\n        @include padding-top(0);\n        @include padding-left(0);\n\n        & > li {\n          @include text-style(md);\n          @include before {\n            @include padding-right(0);\n            font-size: inherit;\n          }\n        }\n      }\n    }\n  }\n}\n","////\n/// Core Tools : Reset\n/// @group core\n////\n\n%a-reset {\n  text-decoration: none;\n  color: inherit;\n}\n\n@mixin link-underline($prepend: '') {\n  box-shadow: #{$prepend} 0 1px 0 0 currentColor;\n}\n\n@mixin enable-link-style() {\n  --is-link: ;\n}\n\n@mixin disable-link-style() {\n  --is-link: false;\n}\n\n@mixin enlarge-link {\n  outline-width: 0 !important;\n  @include before(block, '') {\n    @include absolute(0, 0, 0, 0, 100%, 100%);\n    outline-offset: 2px;\n    outline-style: inherit;\n    outline-color: inherit;\n    outline-width: 2px;\n    @include z-index(over);\n  }\n}\n","////\n/// Core Tools : Global position\n/// @group core\n////\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n","////\n/// Core Tools : Global shadow\n/// @group core\n////\n\n@mixin shadow($type) {\n  box-shadow: map_get($shadows-settings, $type);\n}\n","////\n/// Core Settings : Global shadow\n/// @group core\n////\n\n$shadows-settings: (\n  sm: (0 1px 4px 0 rgba(0, 0, 0, 0.23), 0 2px 0 -2px rgba(0, 0, 0, 0.16), 0 1px 1px 0 rgba(0, 0, 0, 0.16)),\n  md: (0 8px 8px 0 rgba(0, 0, 0, 0.1), 0 8px 16px -16px rgba(0, 0, 0, 0.32)),\n  up: (0 -8px 8px 0 rgba(0, 0, 0, 0.1), 0 -8px 16px -16px rgba(0, 0, 0, 0.32))\n);\n","////\n/// Core Tools : Spacing space\n/// @group core\n////\n\n/// Return space value from type map and convert to rem.\n///\n/// @param {Number} $value - valeur de l'espacement, permet de convertir cet espacement de v (4px) ou w (8px) en rem\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     margin-bottom: space(6v);\n///   }\n@function space($value) {\n  @if $value == 0 {\n    @return $value;\n  }\n\n  @if length($value) > 1 {\n    $result: ();\n    @each $v in $value {\n      $result: append($result, space($v));\n    }\n    @return $result;\n  }\n\n  $v: quote($value);\n\n  @if is-basic-unit($value) {\n    @return $value;\n  }\n\n  $q: str-to-num(unquote(str_slice($v, 0, str_length($v) - 1)));\n  $unit: str_slice($v, str-length($v), str_length($v));\n\n  @if is-unit($value, v) {\n    @return $q * 0.25rem;\n  }\n  @else if is-unit($value, w) {\n    @return $q * 0.5rem;\n  }\n  @return unquote($value);\n}\n\n/// Set space property\n///\n/// @param {String} $property [\"margin\"] - propriété à appliquer à l'espacement `[\"margin\", \"padding\"]`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `[\"x\", \"y\", \"top\", \"right\", \"bottom\", \"left\"]`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing(\"margin\", 6v, \"bottom\");\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n\n  @if $direction != null {\n    $v: space($value);\n\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    $spaces: ();\n\n    @each $v in $value {\n      $spaces: append($spaces, space($v));\n    }\n\n    #{$property}: $spaces;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Sidemenu Module : title\n/// @group sidemenu\n////\n\n/**\n* Titre facultatif\n */\n@include title {\n  @include margin(0);\n  @include padding(4v 0);\n  @include text-style(lg);\n  font-weight: font-weight(bold);\n\n  @include respond-from(md) {\n    @include margin(0 0 6v);\n    @include padding(0);\n    border: 0;\n  }\n}\n","////\n/// Sidemenu Module : variants\n/// @group sidemenu\n////\n\n/**\n * Variantes du sidemenu proposées juste à partir du breakpoint md\n */\n@include respond-from(md) {\n  /**\n   * Modificateur pour que le sidemenu s'adapte à un affichage à droite du contenu\n   * La bordure se met sur la gauche\n   */\n  &--right {\n    @include padding-left(8v);\n    @include padding-right(0);\n\n    #{ns(sidemenu__inner)} {\n      @include padding(0 4v 0 8v);\n      border-right: 0;\n    }\n  }\n\n  /**\n   * Modificateur pour que le sidemenu soit sticky\n   */\n  &--sticky {\n    @include sticky(0, null, null, null, null, 100vh);\n    overflow: auto;\n  }\n\n  /**\n   * Modificateur pour que le sidemenu soit à la fois sticky et prenne toute la hauteur de la page\n   */\n  &--sticky-full-height {\n    @include sticky(0, null, null, null, null, 100vh);\n    overflow: auto;\n\n    #{ns(sidemenu__inner)} {\n      overflow: auto;\n      @include size(null, 100vh);\n    }\n  }\n\n  /**\n   * Modificateur pour avoir une bordure tout autour du sidemenu\n   */\n  &--full-border {\n\n    #{ns(sidemenu__title)} {\n      @include margin-top(2v);\n    }\n    #{ns(sidemenu__inner)} {\n      @include padding(0 1v 0 1v, md);\n    }\n  }\n}\n","////\n/// Core Tools : Global list\n/// @group core\n////\n\n@mixin title() {\n  &__title {\n    @content;\n  }\n}\n\n@mixin body() {\n  &__body {\n    @content;\n  }\n}\n\n@mixin list() {\n  &__list {\n    @content;\n  }\n}\n\n@mixin list-item() {\n  &__item {\n    @content;\n  }\n}\n","////\n/// Core Tools : Typography build\n/// @group core\n////\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} #{px-rem($font-size)} #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin(map-get($settings, margin));\n}\n\n@mixin _space-title($settings) {\n  @include margin(map-get($settings, margin));\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  $append: '';\n  @if $important {\n    $append: ' !important';\n  }\n\n  @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n  @if $with-spacing {\n    @include _space-text($settings);\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  $append: '';\n  @if $important {\n    $append: ' !important';\n  }\n\n  @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n  @if $with-spacing {\n    @include _space-title($settings);\n  }\n}\n","////\n/// Core Settings : Typography font-weight\n/// @group core\n////\n\n$font-weight-scale: (\n  light: 300,\n  regular: 400,\n  bold: 700,\n  xx-bold: 900\n);\n","////\n/// Sidemenu Module : list\n/// @group sidemenu\n////\n\n@include list {\n  font-weight: font-weight('bold');\n\n  #{ns(sidemenu__list)} {\n    @include margin(0 2v 6v);\n    @include margin(0 4v, md);\n    font-weight: font-weight();\n    #{ns(sidemenu__link)},\n    #{ns(sidemenu__btn)} {\n      @include text-style(md);\n      font-weight: font-weight();\n    }\n\n    #{ns(sidemenu__list)} {\n      #{ns(sidemenu__link)},\n      #{ns(sidemenu__btn)} {\n        @include text-style(sm);\n        @include padding(3v 2v, md);\n      }\n    }\n  }\n\n  @include margin(0,md);\n}\n\n@include list-item {\n  @include relative;\n  @include before(null, none);\n\n  &:last-child {\n    border: 0;\n  }\n\n  &--active {\n\n    & > #{ns(sidemenu__link)},\n    & > #{ns(sidemenu__btn)} {\n      @include after(null, '') {\n        @include absolute(3v, null, 3v, 0, 2px);\n      }\n    }\n  }\n\n  @include respond-from(md) {\n    border: 0;\n  }\n\n  #{ns(sidemenu__item)} #{ns(sidemenu__item)} {\n    border: 0;\n  }\n}\n","////\n/// Core Tools : Global pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $display:null, $content:null) {\n  @if $type != after and $type != before {\n    @error '$type must be before or after element';\n  }\n  $pseudo: '::' + quote($type);\n  @at-root #{selector_append(&, $pseudo)} {\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @content;\n  }\n}\n\n@mixin before($display: null, $content: null) {\n  @include _pseudo(before, $display, $content) {\n    @content;\n  }\n}\n\n@mixin after($display: null, $content: null) {\n  @include _pseudo(after, $display, $content) {\n    @content;\n  }\n}\n","////\n/// Core Tools : Global size\n/// @group core\n////\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{space($max-height)};\n    }\n  }\n}\n","////\n/// Sidemenu Module : inner\n/// @group sidemenu\n////\n\n&__inner {\n  @include respond-from(md) {\n    @include padding(0 8v 0 1v);\n  }\n\n  /**\n  * Ce wrapper ne sert que pour la version mobile\n  * On l'utilise pour l'ouverture/fermeture du sidemenu entier\n  */\n  > #{ns(collapse)} {\n    @include margin(0 4v);\n    @include margin(0, md);\n\n    @include respond-from(md) {\n      overflow: initial;\n      max-height: none;\n\n      @include before {\n        display: none;\n      }\n\n      &:not(#{ns(collapse)}--expanded) {\n        visibility: visible;\n      }\n    }\n  }\n}\n","////\n/// Sidemenu Module : button\n/// @group sidemenu\n////\n\n/**\n * Style du bouton du sidemnenu pour ouvrir/refermer les listes de niveaux 1 et 2\n * Bouton pour la version mobile pour ouvrir/refermer le sidemenu\n */\n#{ns(sidemenu__btn)} {\n  @include relative;\n  @include display-flex(row-reverse, center);\n  @include size(100%, 100%);\n  @include padding(3v 2v);\n  @include margin(0 auto);\n  @include text-style(md);\n  text-align: left;\n  font-weight: font-weight(bold);\n  background: 0;\n  border: 0;\n\n  @include font-icon(arrow-down-s-line, sm) {\n    @include margin-left(auto);\n    @include margin-right(0);\n    transition: transform 0.3s;\n\n    @include respond-from(md) {\n      @include margin-right(-6v, md);\n    }\n  }\n\n  &[aria-expanded=\"true\" i] {\n    border: 0;\n    @include before {\n      transform: rotate(-180deg);\n    }\n  }\n\n  /**\n    * Modificateur pour le bouton en version mobile permettant d'ouvrir/refermer le sidemenu\n    * L'icône de gauche est défini dans _sidemenu.scss (provisoire)\n    */\n  @at-root #{ns(sidemenu__inner)} > #{&} {\n    @include size(100%);\n    font-weight: normal;\n    @include before {\n      @include margin-right(4v);\n    }\n\n    /**\n    * Ajout de l'icône de menu en mode mobile (provisoire)\n    */\n    @include font-icon(menu-2-fill, sm, after) {\n      @include margin-x(2v);\n    }\n\n    @include respond-from(md) {\n      display: none;\n    }\n  }\n\n  @include respond-from(md) {\n    @include size(100%);\n    @include padding(3v 8v 3v 2v);\n    border: 0;\n  }\n}\n","////\n/// Core Tools : Global display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n\n%inline-flex-center {\n  @include display-flex(row, center, null, null, true);\n}\n","////\n/// Core Tools : Icons\n/// @group core\n////\n\n/// Return icon size from map\n/// @param {String} $size [\"md\"] - Icon size from `$icon-size-map` (Default to \"md\" = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icons-size(sm);\n///     height: icons-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return px-rem(map-get($icon-size-map, $size));\n}\n\n@mixin custom-icons($icon-size:md) {\n  @include has-icon {\n    @include font-icon(null, $icon-size) {\n      @content;\n    }\n  }\n}\n\n$icons-placeholders-generated: false !global;\n\n@mixin generate-icons-placeholder($icons) {\n  @if $icons-placeholders-generated != true {\n    @at-root {\n      @each $icon, $code in $icons {\n        %#{$icon} {\n          content: \"#{$code}\";\n        }\n      }\n    }\n\n    $icons-placeholders-generated: true !global;\n  }\n}\n\n@mixin generate-icons-content($icons) {\n  @include generate-icons-placeholder($icons-settings);\n  @each $icon, $code in $icons {\n    #{ns('fi-' + $icon)} {\n      @include before {\n        @extend %#{$icon};\n      }\n    }\n  }\n}\n\n@mixin font-icon-content($icon, $prepend: '') {\n  @include generate-icons-placeholder($icons-settings);\n  @if $prepend {\n    content: #{$prepend} \"#{map-get($icons-settings, $icon)}\";\n  }\n  @else {\n    @extend %#{$icon};\n  }\n}\n\n$has-font-icon: false !global;\n@mixin font-icon-placeholder() {\n  @if $has-font-icon != true {\n    @at-root {\n      %font-icon {\n        font-family: icons !important;\n        font-style: normal;\n        font-weight: normal !important;\n        font-variant: normal;\n        text-transform: none;\n        line-height: 1;\n      }\n      $has-font-icon: true !global;\n    }\n  }\n}\n\n@mixin font-icon($icon:null, $icon-size:md, $pseudo:before, $prepend: '') {\n  @include font-icon-placeholder();\n  @include _pseudo($pseudo) {\n    @extend %font-icon;\n\n    @if $icon-size != null {\n      font-size: #{$prepend} icon-size($icon-size);\n    }\n\n    @if $icon != null {\n      @include font-icon-content($icon, $prepend);\n    }\n\n    @content;\n  }\n}\n","////\n/// Core Tools : Global units\n/// @group core\n////\n\n/// Retourne la valeur numérique sans unité.\n/// @access public\n/// @param {String} $value - la valeur avec unité\n/// @example\n///   clean-unit(12px);\n@function clean-unit($value) {\n  @if $value == null {\n    @return null;\n  }\n  @return ($value / ($value * 0 + 1));\n}\n\n/// Return rem from px\n///\n/// @param {String} $px - Font size in pixels\n/// @param {String} $root-font-size [$base-font-size-px] - Pixel font size for conversion\n///\n/// @example scss - Get 1rem conversion from 16px, using $base-font-size-px\n///   .foo {\n///     font-size: px-rem(12px);\n///   }\n@function px-rem($px, $root-font-size: 16px) {\n  @return clean-unit($px / $root-font-size) * 1rem;\n}\n\n@function is-unit($value, $unit) {\n  $v: to-lower-case(quote($value));\n  $u: quote($unit);\n  @return str-index($v, $u) == (str-length($v) - str-length($u) + 1);\n}\n\n@function is-basic-unit($value) {\n  $units: em ex '%' px cm mm in pt pc ch rem vw vh vmin vmax;\n  @each $unit in $units {\n    @if is-unit($value, $unit) {\n      @return true;\n    }\n  }\n  @return false;\n}\n","////\n/// Sidemenu Module : link\n/// @group sidemenu\n////\n\n/**\n * Style du lien d'accès direct du sidemnu\n */\n#{ns(sidemenu__link)} {\n  @include display-flex(row);\n  @include size(calc(100% - #{space(4v)}));\n  @include margin(0 2v);\n  @include padding(3v 0);\n  @include text-style(md);\n  text-align: left;\n\n  @include respond-from(md) {\n    @include size(100%);\n    @include padding(3v 8v 3v 2v);\n    @include margin(0);\n  }\n}\n","////\n/// Schemes Module : Element\n/// @group schemes\n////\n\n/// map des transitions par élément\n/// @type map\n$scheme-elements-transitions:() !global;\n\n/// Ajout d'une combinaison de couleur sur un élément pour un propriété donnée\n/// @access private\n/// @param {String} $set-name - nom de la combinaison comme défini dans settings/sets\n/// @@param {String} $prop - propriété affectée\n/// @param {Bool | String} $transition - objet auqel la transition de couleur est associée\n/// @param {Bool | String} $hover - si true, un effet de hover est appliqué sur l'élément en correspondance avec la couleur. la valeur override permet de simplement changer la couleur de hover (si un hover a déja été appliqué sur l'élément)\n/// @param {String | list}  $value - la valeur appliquée à la propriété. la variable $COLOR est remplacée par la custom property de la combinaison de couleur\n/// @param {String}  $element - le sélécteur de l'élément\n\n@mixin _scheme-element($set-name, $prop, $transition:false, $hover:false, $value:$COLOR, $element:&) {\n  // hover\n  @if $hover != false {\n    $set: map_get($scheme-sets, $set-name);\n    $light: _scheme-set-color($set, light);\n    $dark: _scheme-set-color($set, dark);\n\n    @at-root {\n      @if $hover != override {\n        #{$element} {\n          @include _scheme-element-hover();\n        }\n      }\n\n      #{$not-dark-theme-selector} {\n        #{$element} {\n          @include _get-hover-vars($light);\n        }\n\n        $i: 0;\n        @each $type, $variation in $scheme-blocks {\n          $i: ($i + 1);\n\n          [class*=\"#{$base-scheme}-#{$type}\"],\n          [class*=\"--scheme-#{$type}-\"] {\n            #{$element} {\n              @include _get-hover-vars(_scheme-set-color($set, $type));\n            }\n          }\n        }\n      }\n\n      #{$dark-theme-selector} #{$element} {\n        @include _get-hover-vars($dark);\n      }\n    }\n  }\n\n  // le $COLOR de la valeur est remplacé par la custom property de la couleur\n  #{$prop}: _replace_color($value, var(--#{$set-name}), false);\n\n  // transitions\n  @if $transition != false and $theme-allow-transition != false {\n    @if $transition == true {\n      $transition: $element;\n    }\n\n    $transitions:map_get($scheme-elements-transitions, $transition);\n    @if $transitions == null {\n      $transitions:();\n    }\n\n    $transitions:append($transitions, $prop $theme-transition-duration, $separator: comma);\n    $scheme-elements-transitions:map_merge($scheme-elements-transitions, ($transition:$transitions)) !global;\n\n    @include _theme-transition() {\n      transition: $transitions;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String} $transition - si true, une transition de couleur est appliquée sur la propriété\n/// @param {Bool | String} $hover - si true, un effet de hover est appliqué sur l'élément en correspondance avec la couleur. la valeur override permet de simplement changer la couleur de hover (si un hover a déja été appliqué sur l'élément)\n@mixin scheme-element-bg-color($set-name, $transition:false, $hover:false) {\n  @include _scheme-element($set-name, background-color, $transition, $hover);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String}  $transition - si true, une transition de couleur est appliquée sur la propriété\n@mixin scheme-element-text-color($set-name, $transition:false) {\n  @include _scheme-element($set-name, color, $transition);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String}  $transition - si true, une transition de couleur est appliquée sur la propriété\n@mixin scheme-element-fill-color($set-name, $transition:false) {\n  @include _scheme-element($set-name, fill, $transition);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String}  $transition - si true, une transition de couleur est appliquée sur la propriété\n/// @param {String} $side - le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin scheme-element-border-color($set-name, $transition:false, $side:null, $value:1px solid $COLOR) {\n  $prop:border;\n  @if $side != null {\n    $prop:border-#{$side};\n  }\n  @include _scheme-element($set-name, $prop, $transition, false, $value);\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String}  $transition - si true, une transition de couleur est appliquée sur la propriété\n/// @param {List} $value - définition des propriétés d'outline\n@mixin scheme-element-outline-color($set-name, $transition:false, $value:1px solid $COLOR) {\n  @include _scheme-element($set-name, outline, $transition, false, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String}  $transition - si true, une transition de couleur est appliquée sur la propriété\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin scheme-element-box-shadow-color($set-name, $transition:false, $value:inset 0 0 0 1px $COLOR) {\n  @include _scheme-element($set-name, box-shadow, $transition, false, $value);\n}\n","////\n/// Core Tools : Global strings\n/// @group core\n////\n\n@function _pow10($exponent) {\n  @if $exponent == 0 {\n    @return 1;\n  }\n  $result: 1;\n  @for $i from 1 through $exponent {\n    $result: $result * 10;\n  }\n  @return $result;\n}\n\n/// Fonction de transformation d'une string en nombre intégral\n/// @access public\n/// @param {String} $value - le nombre en chaîne de caractères\n@function str-to-num($value) {\n  $length: str-length($value);\n  $int: ();\n  $float: ();\n  $floating: false;\n  $neg: false;\n\n  @for $i from 1 through $length {\n    $n: str-slice($value, $i, $i);\n\n    @if $n == '.' {\n      $floating: true;\n    }\n    @else if $n == '-' {\n      $neg: true;\n    }\n    @else {\n      @for $d from 0 through 9 {\n        @if quote($d) == $n {\n          @if $floating {\n            $float: append($float, $d);\n          }\n          @else {\n            $int: append($int, $d);\n          }\n        }\n      }\n    }\n  }\n\n  $result: 0;\n\n  $length: length($int);\n  @if $length > 0 {\n    @for $i from 1 through $length {\n      $result: $result + (nth($int, $i) * _pow10($length - $i));\n    }\n  }\n\n  $length: length($float);\n  @if $length > 0 {\n    @for $i from 1 through $length {\n      $result: $result + (nth($float, $i) / _pow10($i));\n    }\n  }\n\n  @if $neg {\n    @return -$result;\n  }\n  @else {\n    @return $result;\n  }\n}\n\n/// Remplacement dans une chaine de caractères\n/// @access public\n/// @param {String} $stack - chaine de caractère où chercher\n/// @param {String} $needle - élément à chercher\n/// @param {String} $content - élément de remplacement\n/// @return {String} la chaîne de caractères transformée\n@function str-replace($stack, $needle, $content) {\n  $is:quote($stack);\n  $in:quote($needle);\n  $ic:quote($content);\n\n  $i:str-index($is, $in);\n\n  @while $i != null {\n    $is:unquote(str_slice($is, 1, $i - 1) + $ic + str_slice($is, $i + str-length($in), str_length($is)));\n    $i:str-index($is, $in);\n  }\n\n  @return unquote($is);\n}\n\n/// Découpage d'une chaine de caractères avec un séparateur particulier\n/// @access public\n/// @param {String} $string - chaine de caractère à découper\n/// @param {String} $separator - séparateur\n@function str-split($string, $separator:',') {\n  $tmp: str-slice($string, 1);\n  $list: ();\n  $index: str-index($string, $separator);\n\n  @if $index == null {\n    $list: ($string);\n  }\n  @else {\n    $list: join((str-slice($string, 1, $index - 1)), str-split(str-slice($string, $index + 1), $separator));\n  }\n  @return $list;\n}\n","////\n/// Sidemenu Schemes\n/// @group sidemenu\n////\n\n#{ns(sidemenu)} {\n  @include scheme-element-bg-color(w-g750, true);\n\n  @include respond-from(md) {\n    @include scheme-element-bg-color(t-plain, true);\n  }\n\n  @include title {\n    @include scheme-element-text-color(g800);\n    @include scheme-element-bg-color(t-plain, true);\n    @include scheme-element-border-color(g300, true, bottom);\n  }\n\n  @include list-item {\n    @include scheme-element-border-color(g300, true, bottom);\n\n    &:last-child {\n      #{ns(sidemenu__btn)} {\n        @include scheme-element-border-color(t-plain, true, bottom);\n      }\n    }\n\n    &--active {\n      & > #{ns(sidemenu__btn)},\n      & > #{ns(sidemenu__link)} {\n        @include scheme-element-text-color(bf500);\n\n        @include after {\n          background-color: currentColor;\n        }\n      }\n    }\n  }\n\n  &__inner {\n    @include respond-from(md) {\n      @include scheme-element-border-color(g300, true, right);\n    }\n  }\n\n  @include respond-from(md) {\n    &--right {\n      #{ns(sidemenu__inner)} {\n        @include scheme-element-border-color(g300, true, left);\n      }\n    }\n\n    &--full-border {\n      #{ns(sidemenu__inner)} {\n        @include scheme-element-border-color(g300, true);\n      }\n    }\n  }\n}\n\n#{ns(sidemenu__btn)} {\n  @include scheme-element-text-color(g800);\n\n  @at-root #{ns(sidemenu__inner)} > #{&} {\n    @include scheme-element-bg-color(w-g750, true);\n  }\n\n  @include respond-from(md) {\n    @include scheme-element-bg-color(t-plain, true, after);\n  }\n}\n\n#{ns(sidemenu__link)} {\n  @include scheme-element-text-color(g800);\n  @include scheme-element-bg-color(t-plain, true, after);\n}\n","////\n/// Schemes Module : Hover\n/// @group schemes\n////\n\n/// Définit les couleurs d'hover\n/// @access private\n/// @param {Color} $color - couleur de l'élément\n/// @param {Bool} $is-block - est-ce que cette définition se fait au niveau d'un block de combinaison ?\n@mixin _get-hover-vars($color, $is-block: false) {\n\n  @if opacity($color) != 0 {\n\n    $prop: color;\n\n    @if $is-block {\n      $prop: block-color;\n    }\n\n    --#{$prop}-hover: #{ _overlay-color($color, 1) };\n    --#{$prop}-active: #{ _overlay-color($color, 2) };\n  }\n  @else {\n    --color-hover: var(--block-color-hover);\n    --color-active: var(--block-color-active);\n  }\n}\n\n/// Applique le hover sur un élément\n/// @access private\n@mixin _scheme-element-hover() {\n  @media (hover: hover) and (pointer: fine) {\n    $selectors: ('&:not(a):not(:disabled)');\n    $a: selector-associate(&, 'a[href]');\n    @if length($a) {\n      $selectors: append($selectors, $a, 'comma');\n    }\n    @at-root #{$selectors} {\n      &:hover {\n        background-image: linear-gradient(0deg, var(--color-hover), var(--color-hover));\n      }\n\n      &:active {\n        background-image: linear-gradient(0deg, var(--color-active), var(--color-active));\n      }\n    }\n  }\n}\n\n@mixin remove-hover() {\n  &:hover,\n  &:active {\n    &:not([disabled]),\n    &:not(:disabled) {\n      background-image: none;\n    }\n  }\n}\n","////\n/// Core Tools : Global breakpoints\n/// @group core\n////\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-to(md) {\n///     }\n///   }\n@mixin respond-to($media) {\n\n  @debug 'afin de rester mobile first, n‘utiliser la mixin respond-to uniquement s‘il n‘y a pas d‘autre alternative, lui préférer systématiquement la mixin respond-from';\n\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null and length($limits) == 2 {\n    @media (max-width: nth($limits, 2)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n"]}