{"version":3,"sources":["<no source>","../../../../../src/logo/styles/_module.scss","../../../../../src/core/styles/reset/tools/_link.scss","../../../../../src/core/styles/spacing/tools/_space.scss","../../../../../src/core/styles/typography/tools/_font-weight.scss","../../../../../src/core/styles/typography/settings/_font-weight.scss","../../../../../src/schemes/styles/tools/_element.scss","../../../../../src/core/styles/global/functions/_strings.scss","../../../../../src/logo/styles/_tools.scss","../../../logo.css","../../../../../src/core/styles/global/tools/_pseudo.scss","../../../../../src/core/styles/spacing/tools/_size.scss"],"names":[],"mappings":"AAAA;;GAAA;ACKA,SCcE,eAAU,CDZV,oBAAqB,CEuEnB,WFtEkB,CGWpB,eCXS,CJET,qBAAa,CACb,qBAAuB,CACvB,wBAAyB,CACzB,qBAAsB,CACtB,iBAAmB,CK2CnB,iBC8BsG,CChFtG,iBAAW,CL6DP,eMpDN,CCNU,gBCFJ,aAAO,CAGP,WAAQ,CRyDR,uBKzDwC,CAC1C,+CAAkG,CAClG,uCCWJ,CDTY,wCACN,+CCYN,CClBU,eFWN,kBAAW,CACX,+BAA0D,CAC1D,2CAAyD,CACzD,sBCWJ,CDTY,2CACN,kCCYN,CC7BU,gBAGJ,aAAS,CAIT,UTEqB,CACvB,+CAAkD,CAClD,q+GQyBJ,CD/BY,wCPQN,+BQ2BN,CCxCU,eAGJ,aAAS,CAIT,UTUoB,CACtB,2BAA4B,CAC5B,umLQ4BJ,CRzBE,aOzBA,kBCsDF,CCnDU,oBCFJ,eAAO,CAGP,aAAQ,CRyDR,oBKzDwC,CAC1C,sDAAkG,CAClG,wCCwDJ,CDtDY,4CACN,sDCyDN,CC/DU,mBFWN,oBAAW,CACX,mCAA0D,CAC1D,6CAAyD,CACzD,sBCwDJ,CDtDY,+CACN,oCCyDN,CRhDE,aO7BA,mBCiFF,CC9EU,oBCFJ,eAAO,CAGP,cAAQ,CRyDR,uBKzDwC,CAC1C,wDAAkG,CAClG,wCCmFJ,CDjFY,4CACN,wDCoFN,CC1FU,mBFWN,oBAAW,CACX,mCAA0D,CAC1D,6CAAyD,CACzD,sBCmFJ,CDjFY,+CACN,oCCoFN","file":"logo.min.css","sourcesContent":[null,"////\n/// Logo Module\n/// @group logo\n////\n\n#{ns(logo)} {\n  @include disable-link-style;\n  display: inline-block;\n  @include padding(1em);\n  @include font-weight(bold);\n  line-height: #{(13 / 12.6)}em;\n  letter-spacing: -0.01em;\n  text-transform: uppercase;\n  vertical-align: middle;\n  text-indent: -0.1em;\n  @include scheme-element-text-color(g800);\n  @include logo-size(md);\n  @include margin-bottom(0);\n\n  @include before(block, '') {\n    background-repeat: no-repeat, no-repeat, no-repeat;\n    background-image: url(svg-encode($svg-marianne)), linear-gradient(90deg, $blue-france-500 0%, $blue-france-500 50%, $red-marianne-500 50%, $red-marianne-500 100%), linear-gradient(90deg, black 0%, black 100%);\n    @at-root :root#{ns-attr(mourning)} #{&} {\n      box-shadow: 0 0 0 1px var(--t-w);\n    }\n  }\n\n  @include after(block, '') {\n    background-repeat: no-repeat;\n    background-image: url(svg-encode($svg-motto));\n  }\n\n  &--sm {\n    @include logo-size(sm);\n  }\n\n  &--lg {\n    @include logo-size(lg);\n  }\n}\n","////\n/// Core Tools : Reset\n/// @group core\n////\n\n%a-reset {\n  text-decoration: none;\n  color: inherit;\n}\n\n@mixin link-underline($prepend: '') {\n  box-shadow: #{$prepend} 0 1px 0 0 currentColor;\n}\n\n@mixin enable-link-style() {\n  --is-link: ;\n}\n\n@mixin disable-link-style() {\n  --is-link: false;\n}\n\n@mixin enlarge-link {\n  outline-width: 0 !important;\n  @include before(block, '') {\n    @include absolute(0, 0, 0, 0, 100%, 100%);\n    outline-offset: 2px;\n    outline-style: inherit;\n    outline-color: inherit;\n    outline-width: 2px;\n    @include z-index(over);\n  }\n}\n","////\n/// Core Tools : Spacing space\n/// @group core\n////\n\n/// Return space value from type map and convert to rem.\n///\n/// @param {Number} $value - valeur de l'espacement, permet de convertir cet espacement de v (4px) ou w (8px) en rem\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     margin-bottom: space(6v);\n///   }\n@function space($value) {\n  @if $value == 0 {\n    @return $value;\n  }\n\n  @if length($value) > 1 {\n    $result: ();\n    @each $v in $value {\n      $result: append($result, space($v));\n    }\n    @return $result;\n  }\n\n  $v: quote($value);\n\n  @if is-basic-unit($value) {\n    @return $value;\n  }\n\n  $q: str-to-num(unquote(str_slice($v, 0, str_length($v) - 1)));\n  $unit: str_slice($v, str-length($v), str_length($v));\n\n  @if is-unit($value, v) {\n    @return $q * 0.25rem;\n  }\n  @else if is-unit($value, w) {\n    @return $q * 0.5rem;\n  }\n  @return unquote($value);\n}\n\n/// Set space property\n///\n/// @param {String} $property [\"margin\"] - propriété à appliquer à l'espacement `[\"margin\", \"padding\"]`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `[\"x\", \"y\", \"top\", \"right\", \"bottom\", \"left\"]`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing(\"margin\", 6v, \"bottom\");\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n\n  @if $direction != null {\n    $v: space($value);\n\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    $spaces: ();\n\n    @each $v in $value {\n      $spaces: append($spaces, space($v));\n    }\n\n    #{$property}: $spaces;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Tools : Typography font-weight\n/// @group core\n////\n\n/// Return font-weight value from font-weight map.\n///\n/// @param {String} $scale [\"regular\"] - Type scale value from `$weight-scale` (Default to \"regular\" = 400)\n///\n/// @example scss - Set font-weight to bold (700)\n///   .foo {\n///     font-weight: font-weight(\"bold\");\n///   }\n\n@function font-weight($scale: regular) {\n  @return map-get($font-weight-scale, $scale);\n}\n\n@mixin font-weight($scale) {\n  font-weight: font-weight($scale);\n}\n\n@mixin font-weights() {\n  @each $name, $weight in $font-weight-scale {\n    & #{ns('text--' + $name)} {\n      font-weight: #{$weight} !important;\n    }\n  }\n}\n","////\n/// Core Settings : Typography font-weight\n/// @group core\n////\n\n$font-weight-scale: (\n  light: 300,\n  regular: 400,\n  bold: 700,\n  xx-bold: 900\n);\n","////\n/// Schemes Module : Element\n/// @group schemes\n////\n\n/// map des transitions par élément\n/// @type map\n$scheme-elements-transitions:() !global;\n\n/// Ajout d'une combinaison de couleur sur un élément pour un propriété donnée\n/// @access private\n/// @param {String} $set-name - nom de la combinaison comme défini dans settings/sets\n/// @@param {String} $prop - propriété affectée\n/// @param {Bool | String} $transition - objet auqel la transition de couleur est associée\n/// @param {Bool | String} $hover - si true, un effet de hover est appliqué sur l'élément en correspondance avec la couleur. la valeur override permet de simplement changer la couleur de hover (si un hover a déja été appliqué sur l'élément)\n/// @param {String | list}  $value - la valeur appliquée à la propriété. la variable $COLOR est remplacée par la custom property de la combinaison de couleur\n/// @param {String}  $element - le sélécteur de l'élément\n\n@mixin _scheme-element($set-name, $prop, $transition:false, $hover:false, $value:$COLOR, $element:&) {\n  // hover\n  @if $hover != false {\n    $set: map_get($scheme-sets, $set-name);\n    $light: _scheme-set-color($set, light);\n    $dark: _scheme-set-color($set, dark);\n\n    @at-root {\n      @if $hover != override {\n        #{$element} {\n          @include _scheme-element-hover();\n        }\n      }\n\n      #{$not-dark-theme-selector} {\n        #{$element} {\n          @include _get-hover-vars($light);\n        }\n\n        $i: 0;\n        @each $type, $variation in $scheme-blocks {\n          $i: ($i + 1);\n\n          [class*=\"#{$base-scheme}-#{$type}\"],\n          [class*=\"--scheme-#{$type}-\"] {\n            #{$element} {\n              @include _get-hover-vars(_scheme-set-color($set, $type));\n            }\n          }\n        }\n      }\n\n      #{$dark-theme-selector} #{$element} {\n        @include _get-hover-vars($dark);\n      }\n    }\n  }\n\n  // le $COLOR de la valeur est remplacé par la custom property de la couleur\n  #{$prop}: _replace_color($value, var(--#{$set-name}), false);\n\n  // transitions\n  @if $transition != false and $theme-allow-transition != false {\n    @if $transition == true {\n      $transition: $element;\n    }\n\n    $transitions:map_get($scheme-elements-transitions, $transition);\n    @if $transitions == null {\n      $transitions:();\n    }\n\n    $transitions:append($transitions, $prop $theme-transition-duration, $separator: comma);\n    $scheme-elements-transitions:map_merge($scheme-elements-transitions, ($transition:$transitions)) !global;\n\n    @include _theme-transition() {\n      transition: $transitions;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String} $transition - si true, une transition de couleur est appliquée sur la propriété\n/// @param {Bool | String} $hover - si true, un effet de hover est appliqué sur l'élément en correspondance avec la couleur. la valeur override permet de simplement changer la couleur de hover (si un hover a déja été appliqué sur l'élément)\n@mixin scheme-element-bg-color($set-name, $transition:false, $hover:false) {\n  @include _scheme-element($set-name, background-color, $transition, $hover);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String}  $transition - si true, une transition de couleur est appliquée sur la propriété\n@mixin scheme-element-text-color($set-name, $transition:false) {\n  @include _scheme-element($set-name, color, $transition);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String}  $transition - si true, une transition de couleur est appliquée sur la propriété\n@mixin scheme-element-fill-color($set-name, $transition:false) {\n  @include _scheme-element($set-name, fill, $transition);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String}  $transition - si true, une transition de couleur est appliquée sur la propriété\n/// @param {String} $side - le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin scheme-element-border-color($set-name, $transition:false, $side:null, $value:1px solid $COLOR) {\n  $prop:border;\n  @if $side != null {\n    $prop:border-#{$side};\n  }\n  @include _scheme-element($set-name, $prop, $transition, false, $value);\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String}  $transition - si true, une transition de couleur est appliquée sur la propriété\n/// @param {List} $value - définition des propriétés d'outline\n@mixin scheme-element-outline-color($set-name, $transition:false, $value:1px solid $COLOR) {\n  @include _scheme-element($set-name, outline, $transition, false, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets\n/// @param {Bool | String}  $transition - si true, une transition de couleur est appliquée sur la propriété\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin scheme-element-box-shadow-color($set-name, $transition:false, $value:inset 0 0 0 1px $COLOR) {\n  @include _scheme-element($set-name, box-shadow, $transition, false, $value);\n}\n","////\n/// Core Tools : Global strings\n/// @group core\n////\n\n@function _pow10($exponent) {\n  @if $exponent == 0 {\n    @return 1;\n  }\n  $result: 1;\n  @for $i from 1 through $exponent {\n    $result: $result * 10;\n  }\n  @return $result;\n}\n\n/// Fonction de transformation d'une string en nombre intégral\n/// @access public\n/// @param {String} $value - le nombre en chaîne de caractères\n@function str-to-num($value) {\n  $length: str-length($value);\n  $int: ();\n  $float: ();\n  $floating: false;\n  $neg: false;\n\n  @for $i from 1 through $length {\n    $n: str-slice($value, $i, $i);\n\n    @if $n == '.' {\n      $floating: true;\n    }\n    @else if $n == '-' {\n      $neg: true;\n    }\n    @else {\n      @for $d from 0 through 9 {\n        @if quote($d) == $n {\n          @if $floating {\n            $float: append($float, $d);\n          }\n          @else {\n            $int: append($int, $d);\n          }\n        }\n      }\n    }\n  }\n\n  $result: 0;\n\n  $length: length($int);\n  @if $length > 0 {\n    @for $i from 1 through $length {\n      $result: $result + (nth($int, $i) * _pow10($length - $i));\n    }\n  }\n\n  $length: length($float);\n  @if $length > 0 {\n    @for $i from 1 through $length {\n      $result: $result + (nth($float, $i) / _pow10($i));\n    }\n  }\n\n  @if $neg {\n    @return -$result;\n  }\n  @else {\n    @return $result;\n  }\n}\n\n/// Remplacement dans une chaine de caractères\n/// @access public\n/// @param {String} $stack - chaine de caractère où chercher\n/// @param {String} $needle - élément à chercher\n/// @param {String} $content - élément de remplacement\n/// @return {String} la chaîne de caractères transformée\n@function str-replace($stack, $needle, $content) {\n  $is:quote($stack);\n  $in:quote($needle);\n  $ic:quote($content);\n\n  $i:str-index($is, $in);\n\n  @while $i != null {\n    $is:unquote(str_slice($is, 1, $i - 1) + $ic + str_slice($is, $i + str-length($in), str_length($is)));\n    $i:str-index($is, $in);\n  }\n\n  @return unquote($is);\n}\n\n/// Découpage d'une chaine de caractères avec un séparateur particulier\n/// @access public\n/// @param {String} $string - chaine de caractère à découper\n/// @param {String} $separator - séparateur\n@function str-split($string, $separator:',') {\n  $tmp: str-slice($string, 1);\n  $list: ();\n  $index: str-index($string, $separator);\n\n  @if $index == null {\n    $list: ($string);\n  }\n  @else {\n    $list: join((str-slice($string, 1, $index - 1)), str-split(str-slice($string, $index + 1), $separator));\n  }\n  @return $list;\n}\n","////\n/// Logo Tools\n/// @group logo\n////\n\n@mixin logo-size($size) {\n  $font-size: map-get($logo-sizes, $size);\n  font-size: #{($font-size * 1.05)};\n\n  @include before {\n    @include size(#{2.75 * $font-size}, #{$font-size});\n    @include margin-bottom(#{($font-size / 3)});\n    background-size: #{2.75 * $font-size} #{1.125 * $font-size}, #{2.75 * $font-size} #{$font-size}, 0;\n    background-position: 0 #{(-0.0625 * $font-size)}, 0 0, 0 0;\n\n    @at-root :root#{ns-attr(mourning)} #{&} {\n      background-size: #{2.75 * $font-size} #{1.125 * $font-size}, 0, #{2.75 * $font-size} #{$font-size};\n    }\n  }\n\n  @include after {\n    min-width: #{2.625 * $font-size};\n    background-size: #{5.25 * $font-size} #{3.75 * $font-size};\n    background-position: 0 calc(100% + #{1.875 * $font-size});\n    padding-top: #{((53/24) * $font-size)};\n\n    @at-root :root#{ns-attr(theme, 'dark')} #{&} {\n      background-position: #{-2.625 * $font-size} 100%;\n    }\n  }\n}\n\n@mixin logo($size: md, $size-md: null) {\n  #{ns(logo)} {\n    @include logo-size($size);\n\n    @if $size-md != null {\n      @include respond-from(md) {\n        @include logo-size($size-md);\n      }\n    }\n\n    @content;\n  }\n}\n\n@function _color-marianne($blue, $red) {\n  $tmp: str-replace($svg-marianne, '$BLUE', $blue);\n  @return str-replace($tmp, '$RED', $red);\n}\n","/* ------------------------------------ *\\\n  LOGO\n\\* ------------------------------------ */\n.fr-logo {\n  --is-link: false;\n  display: inline-block;\n  padding: 1em;\n  font-weight: 700;\n  line-height: 1.03175em;\n  letter-spacing: -0.01em;\n  text-transform: uppercase;\n  vertical-align: middle;\n  text-indent: -0.1em;\n  color: var(--g800);\n  font-size: 1.05rem;\n  margin-bottom: 0;\n}\n\n.fr-logo::before {\n  width: 2.75rem;\n  height: 1rem;\n  margin-bottom: 0.33333rem;\n  background-size: 2.75rem 1.125rem, 2.75rem 1rem, 0;\n  background-position: 0 -0.0625rem, 0 0, 0 0;\n}\n\n:root[data-fr-mourning] .fr-logo::before {\n  background-size: 2.75rem 1.125rem, 0, 2.75rem 1rem;\n}\n\n.fr-logo::after {\n  min-width: 2.625rem;\n  background-size: 5.25rem 3.75rem;\n  background-position: 0 calc(100% + 1.875rem);\n  padding-top: 2.20833rem;\n}\n\n:root[data-fr-theme=\"dark\" i] .fr-logo::after {\n  background-position: -2.625rem 100%;\n}\n\n.fr-logo::before {\n  display: block;\n  content: \"\";\n  background-repeat: no-repeat, no-repeat, no-repeat;\n  background-image: url('data:image/svg+xml;utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 44 18\"><path fill=\"%23fff\" d=\"M11.3 10.2c-.9.6-1.7 1.3-2.3 2.1v-.1c.4-.5.7-1 1-1.5.4-.2.7-.5 1-.8.5-.5 1-1 1.7-1.3.3-.1.5-.1.8 0-.1.1-.2.1-.4.2H13v-.1c-.3.3-.7.5-1 .9-.1.2-.2.6-.7.6 0 .1.1 0 0 0zm1.6 4.6c0-.1-.1 0-.2 0l-.1.1-.1.1-.2.2s.1.1.2 0l.1-.1c.1 0 .2-.1.2-.2.1 0 .1 0 .1-.1 0 .1 0 0 0 0zm-1.6-4.3c.1 0 .2 0 .2-.1s.1-.1.1-.1v-.1c-.2.1-.3.2-.3.3zm2.4 1.9s0-.1 0 0c.1-.1.2-.1.3-.1.7-.1 1.4-.3 2.1-.6-.8-.5-1.7-.9-2.6-1h.1c-.1-.1-.3-.1-.5-.2h.1c-.2-.1-.5-.1-.7-.2.1 0 .2-.2.2-.3h-.1c-.4.2-.6.5-.8.9.2.1.5 0 .7.1h-.3c-.1 0-.2.1-.2.2h.1c-.1 0-.1.1-.2.1.1.1.2 0 .4 0 0 .1.1.1.1.1-.1 0-.2.1-.3.3-.1.2-.2.2-.3.3v.1c-.3.2-.6.5-.9.8v.1c-.1.1-.2.1-.2.2v.1c.4-.1.6-.4 1-.5l.6-.3c.2 0 .3-.1.5-.1v.1h.2c0 .1-.2 0-.1.1s.3.1.4 0c.2-.2.3-.2.4-.2zM12.4 14c-.4.2-.9.2-1.2.4 0 0 0 .1-.1.1 0 0-.1 0-.1.1-.1 0-.1.1-.2.2l-.1.1s0 .1.1 0l.1-.1s-.1.1-.1.2V15.3l-.1.1s0 .1-.1.1l-.1.1.2-.2.1-.1h.2s0-.1.1-.1c.1-.1.2-.2.3-.2h.1c.1-.1.3-.1.4-.2.1-.1.2-.2.3-.2.2-.2.5-.3.8-.5-.1 0-.2-.1-.3-.1 0 .1-.2 0-.3 0zM30 9.7c-.1.2-.4.2-.6.3-.2.2 0 .4.1.5.1.3-.2.5-.4.5.1.1.2.1.2.1 0 .2.2.2.1.4s-.5.3-.3.5c.1.2.1.5 0 .7-.1.2-.3.4-.5.5-.2.1-.4.1-.6 0-.1 0-.1-.1-.2-.1-.5-.1-1-.2-1.5-.2-.1 0-.3.1-.4.1-.1.1-.3.2-.4.3l-.1.1c-.1.1-.2.2-.2.3-.1.2-.2.4-.2.6-.2.5-.2 1 0 1.4 0 0 1 .3 1.7.6.2.1.5.2.7.4l1.7 1H13.2l1.6-1c.6-.4 1.3-.7 2-1 .5-.2 1.1-.5 1.5-.9.2-.2.3-.4.5-.5.3-.4.6-.7 1-1l.3-.3s0-.1.1-.1c-.2.1-.2.2-.4.2 0 0-.1 0 0-.1s.2-.2.3-.2v-.1c-.4 0-.7.2-1 .5h-.2c-.5.2-.8.5-1.2.7v-.1c-.2.1-.4.2-.5.2-.2 0-.5.1-.8 0-.4 0-.7.1-1.1.2-.2.1-.4.1-.6.2v.1l-.2.2c-.2.1-.3.2-.5.4l-.5.5h-.1l.1-.1.1-.1c0-.1.1-.1.1-.2.2-.1.3-.3.5-.4 0 0-.1 0 0 0 0 0 0-.1.1-.1l-.1.1c-.1.1-.1.2-.2.2v-.1-.1l.2-.2c.1-.1.2-.1.3-.2h.1c-.2.1-.3.1-.5.2H14h-.1c0-.1.1-.1.2-.2h.1c1-.8 2.3-.6 3.4-1 .1-.1.2-.1.3-.2.1-.1.3-.2.5-.3.2-.2.4-.4.5-.7v-.1c-.4.4-.8.7-1.3 1-.6.2-1.3.4-2 .4 0-.1.1-.1.1-.1 0-.1.1-.1.1-.2h.1s0-.1.1-.1h.1c-.1-.1-.3.1-.4 0 .1-.1 0-.2.1-.2h.1s0-.1.1-.1c.5-.3.9-.5 1.3-.7-.1 0-.1.1-.2 0 .1 0 0-.1.1-.1.3-.1.6-.3.9-.4-.1 0-.2.1-.3 0 .1 0 .1-.1.2-.1v-.1h0c0-.1.1 0 .2-.1h-.1c.1-.1.2-.2.4-.2 0-.1-.1 0-.1-.1h.1-.5c-.1 0 0-.1 0-.1.1-.2.2-.5.3-.7h-.1c-.3.3-.8.5-1.2.6h-.2c-.2.1-.4.1-.5 0-.1-.1-.2-.2-.3-.2-.2-.1-.5-.3-.8-.4-.7-.2-1.5-.4-2.3-.3.3-.1.7-.2 1.1-.3.5-.2 1-.3 1.5-.3h-.3c-.4 0-.9.1-1.3.2-.3.1-.6.2-.9.2-.2.1-.3.2-.5.2v-.1c.3-.4.7-.7 1.1-.8.5-.1 1.1 0 1.6.1.4 0 .8.1 1.1.2.1 0 .2.2.3.3.2.1.4 0 .5.1v-.2c.1-.1.3 0 .4 0 .2-.2-.2-.4-.3-.6v-.1c.2.2.5.4.7.6.1.1.5.2.5 0-.2-.3-.4-.6-.7-.9v-.2c-.1 0-.1 0-.1-.1-.1-.1-.1-.2-.1-.3-.1-.2 0-.4-.1-.5-.1-.2-.1-.3-.1-.5-.1-.5-.2-1-.3-1.4-.1-.6.3-1 .6-1.5.2-.4.5-.7.8-1 .1-.4.3-.7.6-1 .3-.3.6-.5.9-.6.3-.1.5-.2.8-.3l2.5-.4H25l1.8.3c.1 0 .2 0 .2.1.1.1.3.2.4.2.2.1.4.3.6.5.1.1.2.3.1.4-.1.1-.1.4-.2.4-.2.1-.4.1-.6.1-.1 0-.2 0-.4-.1.5.2.9.4 1.2.8 0 .1.2.1.3.1v.1c-.1.1-.1.1-.1.2h.1c.1-.1.1-.4.3-.3.2.1.2.3.1.4-.1.1-.2.2-.4.3v.2c.1.1.1.2.2.4s.1.5.2.7c.1.5.2.9.2 1.4 0 .2-.1.5 0 .7l.3.6c.1.2.2.3.3.5.2.3.6.6.4 1zm-15.6 5.2c-.1 0-.1.1-.1.1s.1 0 .1-.1zm5.8-1.8c-.1.1 0 0 0 0zm-6.7-.2c0 .1.1 0 .1 0 .2-.1.5 0 .6-.2-.1-.1-.2 0-.2-.1-.1 0-.2 0-.2.1-.1.1-.3.1-.3.2z\"/><path fill=\"gray\" d=\"M27.9 6.8c.1 0 .3 0 .3.1-.1.2-.4.3-.6.5h-.1c-.1.1-.1.2-.1.2h-.3c.1.1.3.2.5.2l.1.1h.2V8c-.1.1-.2.1-.4.1.2.1.5.1.7 0 .2-.1 0-.4.1-.5-.1 0 0-.1-.1-.1.1-.1.1-.2.2-.2s.1 0 .2-.1c0-.1-.1-.1-.1-.2.2-.1.3-.3.3-.5 0-.1-.3-.1-.4-.2h-.5c-.2 0-.3.1-.5.1l-.6.3c.2-.1.4-.1.7-.2 0 .3.2.3.4.3\"/></svg>'), linear-gradient(90deg, #000091 0%, #000091 50%, #e1000f 50%, #e1000f 100%), linear-gradient(90deg, black 0%, black 100%);\n}\n\n:root[data-fr-mourning] .fr-logo::before {\n  box-shadow: 0 0 0 1px var(--t-w);\n}\n\n.fr-logo::after {\n  display: block;\n  content: \"\";\n  background-repeat: no-repeat;\n  background-image: url('data:image/svg+xml;utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 252 180\"><defs><symbol id=\"a\" viewBox=\"0 0 11 15.5\"><path d=\"M10.4 5.3C11.9 1.5 10.1 0 7.9 0 4.2 0 0 6.5 0 11.7c0 2.5 1.2 3.8 3 3.8 2.1 0 4.3-2 6.2-5.5h-1c-1.2 1.5-2.6 2.6-3.9 2.6-1.3 0-2-.8-2-2.6a10.7 10.7 0 01.3-2.2zm-4-3.1c1.1 0 2 .8 1.5 2.6L3.1 6.1c.8-2.2 2.2-4 3.4-4z\"/></symbol><symbol id=\"b\" viewBox=\"0 0 12.4 21.8\"><use width=\"11\" height=\"15.5\" y=\"6.4\" href=\"%23a\"/><path d=\"M7.9 4.7L12.4.6V0h-3L6.7 4.7H8z\"/></symbol><symbol id=\"c\" viewBox=\"0 0 11.5 19\"><path d=\"M1.7 5.7h2.6L.1 17.1a1.3 1.3 0 001.2 2c3 0 6.4-2.6 7.8-6.2h-.7a9.4 9.4 0 01-5.1 3.5L7 5.7H11l.5-1.6H7.7L9 0H7.6L4.9 4.1l-3.2.4v1.2z\"/></symbol><symbol id=\"d\" viewBox=\"0 0 9.8 21.9\"><path d=\"M7.6 8c.3-1-.4-1.6-1-1.6-2.2 0-5 2.1-6 5h.7A5.6 5.6 0 014.4 9L.1 20.3a1.1 1.1 0 001 1.6c2.2 0 4.7-2 5.8-5H6A5.6 5.6 0 013 19.5zM8 3.7a1.8 1.8 0 001.8-1.8A1.8 1.8 0 008 0a1.8 1.8 0 00-1.8 1.8A1.8 1.8 0 008 3.6\"/></symbol><symbol id=\"e\" viewBox=\"0 0 14.8 15.5\"><path d=\"M3.3 3.1c.7 0 1 1 0 3.4l-3 6.8c-.7 1.3 0 2.2 1.2 2.2a1.3 1.3 0 001.5-1l3-8C7.4 4.8 10 3 11 3s.8.6.3 1.6l-4.6 9a1.3 1.3 0 001.1 1.9c2.3 0 5-2 6-5h-.6A5.6 5.6 0 0110 13l4-8a6.1 6.1 0 00.8-2.8A2 2 0 0012.6 0c-2 0-3.6 2.2-6 5V2.8C6.6 1.4 6.1 0 4.8 0 3.2 0 1.8 2.5.7 4.9h.7c.7-1.1 1.3-1.8 2-1.8\"/></symbol><symbol id=\"f\" viewBox=\"0 0 12 15.5\"><path d=\"M11.8 3.5c.5-1.9.2-3.5-1.2-3.5-1.8 0-2.3 1.2-4 5V2.8C6.5 1.3 6 0 4.6 0 3.1 0 1.7 2.5.5 5h.8C2 3.7 2.8 3 3.3 3c.7 0 1 1 0 3.4l-3 6.8c-.7 1.3 0 2.1 1.2 2.1a1.3 1.3 0 001.5-1l3-8a50.3 50.3 0 012.6-3h3.2z\"/></symbol><symbol id=\"g\" viewBox=\"0 0 14.7 16.2\"><path d=\"M10.5 13.1c-.6 0-1-1 0-3.4L14.6.1 13.4 0l-1.3 1.3h-.3C6.1 1.3 0 8.6 0 14.2a2 2 0 002.1 2.1c1.7 0 3.3-2.4 5.2-5l-.1 1c-.3 2.6.6 4 2 4 1.5 0 3-2.4 4-4.9h-.7c-.7 1.1-1.5 1.8-2 1.8zM7.9 9.8c-1.3 1.6-3.4 3.5-4.3 3.5-.5 0-.9-.5-.9-1.6 0-3.5 4-8.2 6-8.2a4.2 4.2 0 011.4.2z\"/></symbol><symbol id=\"h\" viewBox=\"0 0 21.9 19.8\"><path d=\"M11.2 19.8l.3-.9c-3.8-.7-4.3-.7-2.7-4.8l1.4-3.9h3c1.9 0 1.9.9 1.6 3h1l2.6-6.9h-1c-1 1.6-1.8 2.9-3.8 2.9h-3l2-5.6c.8-2 1.1-2.4 3.7-2.4h.7c2.6 0 3 .7 3 3.5h1l.9-4.7H7.3L7 .9c3 .6 3.3.9 2 4.8L5.7 14c-1.5 3.9-2 4.2-5.5 4.8l-.3.9z\"/></symbol><symbol id=\"i\" viewBox=\"0 0 10.1 21.9\"><path d=\"M2.9 19.4L10.1.3 9.8 0l-5 .6v.6l1 .7c.9.7.6 1.3-.2 3.4L.2 19.9a1.3 1.3 0 001.1 2c2.3 0 4.7-2.1 5.8-5h-.7a6.5 6.5 0 01-3.5 2.5\"/></symbol><symbol id=\"j\" viewBox=\"0 0 18 22\"><path d=\"M18 .6h-4.3a3.8 3.8 0 00-2.1-.6A6.6 6.6 0 005 6.5a3.3 3.3 0 003 3.6c-1.9.8-3 1.8-3 2.9a1.7 1.7 0 00.9 1.5c-4.3 1.3-6 2.8-6 4.7 0 2 2.6 2.8 5.6 2.8 5.3 0 9.6-2.7 9.6-5.1 0-1.8-1.6-2.5-4.3-3.3-2.2-.7-3.2-.8-3.2-1.6A2.4 2.4 0 019 10.2a6.6 6.6 0 006.1-6.5 4.5 4.5 0 00-.2-1.5h2.5zM9.8 16.2c2.1.7 3 1 3 1.6 0 1.4-2 2.5-5.6 2.5-2.7 0-4-.6-4-2 0-1.5 1.4-2.5 3.5-3.3a21.5 21.5 0 003 1.2zM9 9c-1 0-1.3-.8-1.3-1.7 0-2.8 1.4-6.2 3.5-6.2 1 0 1.3.8 1.3 1.6 0 2.9-1.4 6.3-3.5 6.3z\"/></symbol><symbol id=\"k\" viewBox=\"0 0 23 25.1\"><path d=\"M14.3 15.6c1.9 0 2 .8 1.6 2.8H17l2.5-6.8h-1c-1 1.6-1.7 2.9-3.8 2.9h-4.1l2-5.6c.7-2 1-2.4 3.7-2.4H18c2.6 0 3 .7 3 3.5h1l.9-4.7H7.3l-.3.9c3 .6 3.3.9 2 4.8l-3.2 8.4c-1.5 3.9-2 4.2-5.6 4.8l-.2 1h17.4l3.2-5h-1.2c-2 2-4 3.8-8 3.8-4.7 0-4.3-.3-2.7-4.6l1.4-3.8h4.2zm2.3-11.8L21 .6V0h-3l-2.6 3.9h1.2v-.1z\"/></symbol><symbol id=\"l\" viewBox=\"0 0 13.6 21.8\"><path d=\"M11.4 6.4c-2 0-4 2.2-5.8 4.8L9.6.3 9.4 0l-5 .6V1l1 .8c.9.7.6 1.3-.2 3.4L.8 16.8A13.9 13.9 0 000 19c0 1.4 1.8 2.7 3.5 2.7 3.8 0 10-6.9 10-12.2 0-2.3-.5-3.2-2.1-3.2zM4.8 19.5c-.8 0-1.9-.7-1.9-1.3a15.5 15.5 0 01.8-2.2L5 12.7C6.3 11 8.4 9.3 9.6 9.3c.7 0 1.2.4 1.2 1.5 0 3.1-2.9 8.7-6 8.7z\"/></symbol><symbol id=\"m\" viewBox=\"0 0 19.2 19.9\"><path d=\"M17.6 0H7.3L7 .9c3 .6 3.3.9 2 4.8l-3.2 8.5c-1.5 3.9-2 4.2-5.5 4.8L0 20h15.7l3.5-6H18c-2 2-4.2 4.8-7.7 4.8-2.7 0-3-.5-1.6-4.5l3.1-8.5c1.4-3.9 2-4.2 5.5-4.8z\"/></symbol><symbol id=\"n\" viewBox=\"0 0 126 90\"><use width=\"12.4\" height=\"21.8\" x=\"112.7\" y=\"66.1\" href=\"%23b\"/><use width=\"11.5\" height=\"19\" x=\"102.2\" y=\"69\" href=\"%23c\"/><use width=\"9.8\" height=\"21.9\" x=\"93.6\" y=\"66.1\" href=\"%23d\"/><use width=\"14.8\" height=\"15.5\" x=\"77.2\" y=\"72.5\" href=\"%23e\"/><use width=\"12\" height=\"15.5\" x=\"65.7\" y=\"72.5\" href=\"%23f\"/><use width=\"11\" height=\"15.5\" x=\"54.3\" y=\"72.5\" href=\"%23a\"/><use width=\"11.5\" height=\"19\" x=\"43.7\" y=\"69\" href=\"%23c\"/><use width=\"14.7\" height=\"16.2\" x=\"28.9\" y=\"71.8\" href=\"%23g\"/><use width=\"12\" height=\"15.5\" x=\"19.6\" y=\"72.5\" href=\"%23f\"/><use width=\"21.9\" height=\"19.8\" y=\"67.6\" href=\"%23h\"/><use width=\"12.4\" height=\"21.8\" x=\"77.3\" y=\"33.1\" href=\"%23b\"/><use width=\"11.5\" height=\"19\" x=\"66.8\" y=\"36\" href=\"%23c\"/><use width=\"9.8\" height=\"21.9\" x=\"58.2\" y=\"33\" href=\"%23d\"/><use width=\"10.1\" height=\"21.9\" x=\"49.4\" y=\"33.1\" href=\"%23i\"/><use width=\"14.7\" height=\"16.2\" x=\"34.9\" y=\"38.8\" href=\"%23g\"/><use width=\"18\" height=\"22\" x=\"18.6\" y=\"39.4\" href=\"%23j\"/><use width=\"23\" height=\"25.1\" y=\"29.3\" href=\"%23k\"/><use width=\"12.4\" height=\"21.8\" x=\"76.8\" y=\".1\" href=\"%23b\"/><use width=\"11.5\" height=\"19\" x=\"66.2\" y=\"2.9\" href=\"%23c\"/><use width=\"12\" height=\"15.5\" x=\"54.8\" y=\"6.5\" href=\"%23f\"/><use width=\"11\" height=\"15.5\" x=\"43.4\" y=\"6.4\" href=\"%23a\"/><use width=\"13.6\" height=\"21.8\" x=\"29.4\" y=\".1\" href=\"%23l\"/><use width=\"9.8\" height=\"21.9\" x=\"20.6\" href=\"%23d\"/><use width=\"19.2\" height=\"19.9\" y=\"1.4\" href=\"%23m\"/></symbol></defs><use fill=\"%231e1e1e\" width=\"126\" height=\"90\" x=\"0\" y=\"0\" href=\"%23n\"/><use fill=\"%23fff\" width=\"126\" height=\"90\" x=\"126\" y=\"90\" href=\"%23n\"/></svg>');\n}\n\n.fr-logo--sm {\n  font-size: 0.7875rem;\n}\n\n.fr-logo--sm::before {\n  width: 2.0625rem;\n  height: 0.75rem;\n  margin-bottom: 0.25rem;\n  background-size: 2.0625rem 0.84375rem, 2.0625rem 0.75rem, 0;\n  background-position: 0 -0.04688rem, 0 0, 0 0;\n}\n\n:root[data-fr-mourning] .fr-logo--sm::before {\n  background-size: 2.0625rem 0.84375rem, 0, 2.0625rem 0.75rem;\n}\n\n.fr-logo--sm::after {\n  min-width: 1.96875rem;\n  background-size: 3.9375rem 2.8125rem;\n  background-position: 0 calc(100% + 1.40625rem);\n  padding-top: 1.65625rem;\n}\n\n:root[data-fr-theme=\"dark\" i] .fr-logo--sm::after {\n  background-position: -1.96875rem 100%;\n}\n\n.fr-logo--lg {\n  font-size: 1.3125rem;\n}\n\n.fr-logo--lg::before {\n  width: 3.4375rem;\n  height: 1.25rem;\n  margin-bottom: 0.41667rem;\n  background-size: 3.4375rem 1.40625rem, 3.4375rem 1.25rem, 0;\n  background-position: 0 -0.07812rem, 0 0, 0 0;\n}\n\n:root[data-fr-mourning] .fr-logo--lg::before {\n  background-size: 3.4375rem 1.40625rem, 0, 3.4375rem 1.25rem;\n}\n\n.fr-logo--lg::after {\n  min-width: 3.28125rem;\n  background-size: 6.5625rem 4.6875rem;\n  background-position: 0 calc(100% + 2.34375rem);\n  padding-top: 2.76042rem;\n}\n\n:root[data-fr-theme=\"dark\" i] .fr-logo--lg::after {\n  background-position: -3.28125rem 100%;\n}\n","////\n/// Core Tools : Global pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $display:null, $content:null) {\n  @if $type != after and $type != before {\n    @error '$type must be before or after element';\n  }\n  $pseudo: '::' + quote($type);\n  @at-root #{selector_append(&, $pseudo)} {\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @content;\n  }\n}\n\n@mixin before($display: null, $content: null) {\n  @include _pseudo(before, $display, $content) {\n    @content;\n  }\n}\n\n@mixin after($display: null, $content: null) {\n  @include _pseudo(after, $display, $content) {\n    @content;\n  }\n}\n","////\n/// Core Tools : Global size\n/// @group core\n////\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{space($max-height)};\n    }\n  }\n}\n"]}