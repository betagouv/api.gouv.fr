{"version":3,"file":"breadcrumb.module.min.js","sources":["../../src/core/generated/scripts/config.js","../../src/core/api.js","../../src/breadcrumb/scripts/breadcrumb/constants.js","../../src/breadcrumb/scripts/breadcrumb/breadcrumb.js","../../src/breadcrumb/scripts/module.js","../../src/breadcrumb/scripts/breadcrumb/build.js"],"sourcesContent":["export const prefix = 'fr';\r\nexport const namespace = 'dsfr';\r\nexport const organisation = '@gouvfr';\r\n","import { namespace } from './generated/scripts/config.js';\n\nconst api = window[namespace] || { core: {} };\nwindow[namespace] = api;\nexport default api;\n","import api from '../../api.js';\n\nexport const BREADCRUMB_COLLAPSE_SELECTOR = `${api.core.ns.selector('breadcrumb')} ${api.core.ns.selector('collapse')}`;\n","import api from '../../api.js';\n\nclass Breadcrumb extends api.core.Instance {\n  constructor (element) {\n    super(element);\n    this.collapse = api.core.Instance.getInstances(element, api.Collapse)[0];\n    this.links = [...this.element.querySelectorAll('a[href]')];\n    this.count = 0;\n    if (this.links.length) {\n      this.listen(api.core.Disclosure.DISCLOSE_EVENT, this.focus.bind(this));\n      // TODO: refactor avec instance\n      this.resizing = this.resize.bind(this);\n      window.addEventListener('resize', this.resizing);\n    }\n  }\n\n  focus () {\n    this.links[0].focus();\n    api.core.engine.renderer.next(() => { this.verify(); });\n  }\n\n  verify () {\n    this.count++;\n    if (this.count > 100) return;\n    if (document.activeElement !== this.links[0]) this.focus();\n  }\n\n  resize () {\n    if (window.matchMedia('(min-width: 48em)').matches) {\n      if (this.collapse.buttons[0] === document.activeElement) this.links.focus();\n    } else {\n      if (this.links.indexOf(document.activeElement) > -1) this.collapse.focus();\n    }\n  }\n}\n\nexport { Breadcrumb };\n","/* eslint-disable no-new */\nimport api from '../api.js';\nimport build from './breadcrumb/build.js';\nimport { BREADCRUMB_COLLAPSE_SELECTOR } from './breadcrumb/constants';\n\nnew api.core.Initializer(BREADCRUMB_COLLAPSE_SELECTOR, [build]);\n","import { BREADCRUMB_COLLAPSE_SELECTOR } from './constants';\nimport { Breadcrumb } from './breadcrumb';\n\nconst build = () => {\n  const breadcrumbs = [];\n  const breadcrumbNodes = document.querySelectorAll(BREADCRUMB_COLLAPSE_SELECTOR);\n  for (let i = 0; i < breadcrumbNodes.length; i++) breadcrumbs.push(new Breadcrumb(breadcrumbNodes[i]));\n};\n\nexport default build;\n"],"names":["api","window","core","BREADCRUMB_COLLAPSE_SELECTOR","ns","selector","Breadcrumb","Instance","[object Object]","element","super","this","collapse","getInstances","Collapse","links","querySelectorAll","count","length","listen","Disclosure","DISCLOSE_EVENT","focus","bind","resizing","resize","addEventListener","engine","renderer","next","verify","document","activeElement","matchMedia","matches","buttons","indexOf","Initializer","breadcrumbs","breadcrumbNodes","i","push"],"mappings":";AACO,MCCDA,EAAMC,OAAgB,MAAK,CAAEC,KAAM,IACzCD,OAAgB,KAAID,ECDb,MAAMG,EAA+B,GAAGH,EAAIE,KAAKE,GAAGC,SAAS,iBAAiBL,EAAIE,KAAKE,GAAGC,SAAS,cCA1G,MAAMC,UAAmBN,EAAIE,KAAKK,SAChCC,YAAaC,GACXC,MAAMD,GACNE,KAAKC,SAAWZ,EAAIE,KAAKK,SAASM,aAAaJ,EAAST,EAAIc,UAAU,GACtEH,KAAKI,MAAQ,IAAIJ,KAAKF,QAAQO,iBAAiB,YAC/CL,KAAKM,MAAQ,EACTN,KAAKI,MAAMG,SACbP,KAAKQ,OAAOnB,EAAIE,KAAKkB,WAAWC,eAAgBV,KAAKW,MAAMC,KAAKZ,OAEhEA,KAAKa,SAAWb,KAAKc,OAAOF,KAAKZ,MACjCV,OAAOyB,iBAAiB,SAAUf,KAAKa,WAI3ChB,QACEG,KAAKI,MAAM,GAAGO,QACdtB,EAAIE,KAAKyB,OAAOC,SAASC,MAAK,KAAQlB,KAAKmB,YAG7CtB,SACEG,KAAKM,QACDN,KAAKM,MAAQ,KACbc,SAASC,gBAAkBrB,KAAKI,MAAM,IAAIJ,KAAKW,QAGrDd,SACMP,OAAOgC,WAAW,qBAAqBC,QACrCvB,KAAKC,SAASuB,QAAQ,KAAOJ,SAASC,eAAerB,KAAKI,MAAMO,QAEhEX,KAAKI,MAAMqB,QAAQL,SAASC,gBAAkB,GAAGrB,KAAKC,SAASU,SC1BzE,IAAItB,EAAIE,KAAKmC,YAAYlC,EAA8B,CCFzC,KACZ,MAAMmC,EAAc,GACdC,EAAkBR,SAASf,iBAAiBb,GAClD,IAAK,IAAIqC,EAAI,EAAGA,EAAID,EAAgBrB,OAAQsB,IAAKF,EAAYG,KAAK,IAAInC,EAAWiC,EAAgBC"}